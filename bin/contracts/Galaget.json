{
    "contractName": "Galaget",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "baseTokenURI",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "TOKEN_LIMIT",
            "outputs": [
                {
                    "internalType": "uint16",
                    "name": "",
                    "type": "uint16"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "contractURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getMintPrice",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "mintToken",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_salePrice",
                    "type": "uint256"
                }
            ],
            "name": "royaltyInfo",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "royaltyAmount",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenByIndex",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_LIMIT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/taylorsloan/Projects/galaget-contract/contracts/Galaget.sol\":\"Galaget\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/taylorsloan/Projects/galaget-contract/contracts/Galaget.sol\":{\"keccak256\":\"0x3a15b160a996c11d7b5d775e92823ebfe92bcf80bfe0969c2dbaaf89082360c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca6c7564ba386bdca2ad441ea38f32aced130f4901f019927da2df57c24a6b4f\",\"dweb:/ipfs/QmZW86cbcg22S6prwy5hJFmmropU6KtrRPsrAfac745i3q\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol\":{\"keccak256\":\"0xa2695a4c7b192f34b98a3875dfce54c8c6c4976b898a5598b1ce0355ce2e6c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a9eed1168b7794c22eb3ef76ac6d8c523cfb453c5113e3314781dadb5d0de4b\",\"dweb:/ipfs/QmcoTzSK56c3tUN9zsD66YpTjoxguuo76BdrDs5ZSSaJMp\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040516200256c3803806200256c833981016040819052620000349162000252565b8251839083906200004d90600090602085019062000101565b5080516200006390600190602084019062000101565b5050600a805460ff1916905550620000846200007e620000a3565b620000a7565b80516200009990600b90602084019062000101565b5050505062000332565b3390565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200010f90620002df565b90600052602060002090601f0160209004810192826200013357600085556200017e565b82601f106200014e57805160ff19168380011785556200017e565b828001600101855582156200017e579182015b828111156200017e57825182559160200191906001019062000161565b506200018c92915062000190565b5090565b5b808211156200018c576000815560010162000191565b600082601f830112620001b8578081fd5b81516001600160401b0380821115620001d557620001d56200031c565b6040516020601f8401601f1916820181018381118382101715620001fd57620001fd6200031c565b604052838252858401810187101562000214578485fd5b8492505b8383101562000237578583018101518284018201529182019162000218565b838311156200024857848185840101525b5095945050505050565b60008060006060848603121562000267578283fd5b83516001600160401b03808211156200027e578485fd5b6200028c87838801620001a7565b94506020860151915080821115620002a2578384fd5b620002b087838801620001a7565b93506040860151915080821115620002c6578283fd5b50620002d586828701620001a7565b9150509250925092565b600281046001821680620002f457607f821691505b602082108114156200031657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61222a80620003426000396000f3fe6080604052600436106101b75760003560e01c8063559e775b116100ec57806395d89b411161008a578063c87b56dd11610064578063c87b56dd1461048e578063e8a3d485146104ae578063e985e9c5146104c3578063f2fde38b146104e3576101b7565b806395d89b4114610439578063a22cb4651461044e578063b88d4fde1461046e576101b7565b806370a08231116100c657806370a08231146103da578063715018a6146103fa5780638456cb591461040f5780638da5cb5b14610424576101b7565b8063559e775b146103855780635c975abb146103a55780636352211e146103ba576101b7565b806323b872dd116101595780633f4ba83a116101335780633f4ba83a1461031d57806342842e0e146103325780634f6ccce71461035257806351cff8d914610372576101b7565b806323b872dd146102af5780632a55205a146102cf5780632f745c59146102fd576101b7565b8063081812fc11610195578063081812fc14610236578063095ea7b31461026357806318160ddd146102855780632004ffd9146102a7576101b7565b806301ffc9a7146101bc578063031bd4c4146101f257806306fdde0314610214575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461191b565b610503565b6040516101e99190611a7d565b60405180910390f35b3480156101fe57600080fd5b50610207610537565b6040516101e9919061205a565b34801561022057600080fd5b5061022961053d565b6040516101e99190611a88565b34801561024257600080fd5b50610256610251366004611953565b6105cf565b6040516101e99190611a13565b34801561026f57600080fd5b5061028361027e3660046118f2565b61061b565b005b34801561029157600080fd5b5061029a6106b3565b6040516101e99190612069565b6102836106b9565b3480156102bb57600080fd5b506102836102ca3660046117b1565b610737565b3480156102db57600080fd5b506102ef6102ea36600461196b565b61076f565b6040516101e9929190611a64565b34801561030957600080fd5b5061029a6103183660046118f2565b61079e565b34801561032957600080fd5b506102836107f0565b34801561033e57600080fd5b5061028361034d3660046117b1565b610839565b34801561035e57600080fd5b5061029a61036d366004611953565b610854565b610283610380366004611765565b6108af565b34801561039157600080fd5b5061029a6103a0366004611953565b61095b565b3480156103b157600080fd5b506101dc6109b4565b3480156103c657600080fd5b506102566103d5366004611953565b6109bd565b3480156103e657600080fd5b5061029a6103f5366004611765565b6109f2565b34801561040657600080fd5b50610283610a36565b34801561041b57600080fd5b50610283610a7f565b34801561043057600080fd5b50610256610ac6565b34801561044557600080fd5b50610229610ada565b34801561045a57600080fd5b506102836104693660046118b8565b610ae9565b34801561047a57600080fd5b506102836104893660046117ec565b610afb565b34801561049a57600080fd5b506102296104a9366004611953565b610b3a565b3480156104ba57600080fd5b50610229610b6b565b3480156104cf57600080fd5b506101dc6104de36600461177f565b610b8b565b3480156104ef57600080fd5b506102836104fe366004611765565b610bb9565b60006001600160e01b0319821663152a902d60e11b141561052657506001610532565b61052f82610c27565b90505b919050565b61115c81565b60606000805461054c90612100565b80601f016020809104026020016040519081016040528092919081815260200182805461057890612100565b80156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050505050905090565b60006105da82610c4c565b6105ff5760405162461bcd60e51b81526004016105f690611e44565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610626826109bd565b9050806001600160a01b0316836001600160a01b0316141561065a5760405162461bcd60e51b81526004016105f690611f5d565b806001600160a01b031661066c610c69565b6001600160a01b031614806106885750610688816104de610c69565b6106a45760405162461bcd60e51b81526004016105f690611d1f565b6106ae8383610c6d565b505050565b60085490565b60006106c36106b3565b905061115c8111156106e75760405162461bcd60e51b81526004016105f69061203b565b6106ef610ac6565b6001600160a01b0316610700610c69565b6001600160a01b031614610723576107178161095b565b34101561072357600080fd5b61073461072e610c69565b82610cdb565b50565b610748610742610c69565b82610dba565b6107645760405162461bcd60e51b81526004016105f690611f9e565b6106ae838383610e3f565b60008061077a610ac6565b6127106107898561019061209e565b610793919061208a565b915091509250929050565b60006107a9836109f2565b82106107c75760405162461bcd60e51b81526004016105f690611b14565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107f8610c69565b6001600160a01b0316610809610ac6565b6001600160a01b03161461082f5760405162461bcd60e51b81526004016105f690611e90565b610837610f6c565b565b6106ae83838360405180602001604052806000815250610afb565b600061085e6106b3565b821061087c5760405162461bcd60e51b81526004016105f690611fef565b6008828154811061089d57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6108b7610c69565b6001600160a01b03166108c8610ac6565b6001600160a01b0316146108ee5760405162461bcd60e51b81526004016105f690611e90565b6000816001600160a01b03164760405161090790611a10565b60006040518083038185875af1925050503d8060008114610944576040519150601f19603f3d011682016040523d82523d6000602084013e610949565b606091505b505090508061095757600080fd5b5050565b6000610457821015610975575066470de4df820000610532565b6108ae82101561098d5750668e1bc9bf040000610532565b610d058210156109a5575066d529ae9e860000610532565b5067011c37937e080000610532565b600a5460ff1690565b6000818152600260205260408120546001600160a01b03168061052f5760405162461bcd60e51b81526004016105f690611dc6565b60006001600160a01b038216610a1a5760405162461bcd60e51b81526004016105f690611d7c565b506001600160a01b031660009081526003602052604090205490565b610a3e610c69565b6001600160a01b0316610a4f610ac6565b6001600160a01b031614610a755760405162461bcd60e51b81526004016105f690611e90565b6108376000610fda565b610a87610c69565b6001600160a01b0316610a98610ac6565b6001600160a01b031614610abe5760405162461bcd60e51b81526004016105f690611e90565b610837611034565b600a5461010090046001600160a01b031690565b60606001805461054c90612100565b610957610af4610c69565b838361108f565b610b0c610b06610c69565b83610dba565b610b285760405162461bcd60e51b81526004016105f690611f9e565b610b3484848484611132565b50505050565b6060610b4582611165565b604051602001610b5591906119e7565b6040516020818303038152906040529050919050565b60606040518060600160405280603281526020016121c360329139905090565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610bc1610c69565b6001600160a01b0316610bd2610ac6565b6001600160a01b031614610bf85760405162461bcd60e51b81526004016105f690611e90565b6001600160a01b038116610c1e5760405162461bcd60e51b81526004016105f690611bb1565b61073481610fda565b60006001600160e01b0319821663780e9d6360e01b148061052f575061052f826111e8565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ca2826109bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610d015760405162461bcd60e51b81526004016105f690611e0f565b610d0a81610c4c565b15610d275760405162461bcd60e51b81526004016105f690611bf7565b610d3360008383611228565b6001600160a01b0382166000908152600360205260408120805460019290610d5c908490612072565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610dc582610c4c565b610de15760405162461bcd60e51b81526004016105f690611ca9565b6000610dec836109bd565b9050806001600160a01b0316846001600160a01b03161480610e275750836001600160a01b0316610e1c846105cf565b6001600160a01b0316145b80610e375750610e378185610b8b565b949350505050565b826001600160a01b0316610e52826109bd565b6001600160a01b031614610e785760405162461bcd60e51b81526004016105f690611ec5565b6001600160a01b038216610e9e5760405162461bcd60e51b81526004016105f690611c2e565b610ea9838383611228565b610eb4600082610c6d565b6001600160a01b0383166000908152600360205260408120805460019290610edd9084906120bd565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f0b908490612072565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610f746109b4565b610f905760405162461bcd60e51b81526004016105f690611ae6565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610fc3610c69565b604051610fd09190611a13565b60405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61103c6109b4565b156110595760405162461bcd60e51b81526004016105f690611cf5565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fc3610c69565b816001600160a01b0316836001600160a01b031614156110c15760405162461bcd60e51b81526004016105f690611c72565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190611125908590611a7d565b60405180910390a3505050565b61113d848484610e3f565b61114984848484611233565b610b345760405162461bcd60e51b81526004016105f690611b5f565b606061117082610c4c565b61118c5760405162461bcd60e51b81526004016105f690611f0e565b600061119661134e565b905060008151116111b657604051806020016040528060008152506111e1565b806111c08461135d565b6040516020016111d19291906119b8565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b148061121957506001600160e01b03198216635b5e139f60e01b145b8061052f575061052f82611478565b6106ae838383611491565b6000611247846001600160a01b03166114c1565b1561134357836001600160a01b031663150b7a02611263610c69565b8786866040518563ffffffff1660e01b81526004016112859493929190611a27565b602060405180830381600087803b15801561129f57600080fd5b505af19250505080156112cf575060408051601f3d908101601f191682019092526112cc91810190611937565b60015b611329573d8080156112fd576040519150601f19603f3d011682016040523d82523d6000602084013e611302565b606091505b5080516113215760405162461bcd60e51b81526004016105f690611b5f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e37565b506001949350505050565b6060600b805461054c90612100565b60608161138257506040805180820190915260018152600360fc1b6020820152610532565b8160005b81156113ac57806113968161213b565b91506113a59050600a8361208a565b9150611386565b60008167ffffffffffffffff8111156113d557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113ff576020820181803683370190505b5090505b8415610e37576114146001836120bd565b9150611421600a86612156565b61142c906030612072565b60f81b81838151811061144f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611471600a8661208a565b9450611403565b6001600160e01b031981166301ffc9a760e01b14919050565b61149c8383836114c7565b6114a46109b4565b156106ae5760405162461bcd60e51b81526004016105f690611a9b565b3b151590565b6114d28383836106ae565b6001600160a01b0383166114ee576114e981611550565b611511565b816001600160a01b0316836001600160a01b031614611511576115118382611594565b6001600160a01b03821661152d5761152881611631565b6106ae565b826001600160a01b0316826001600160a01b0316146106ae576106ae828261170a565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016115a1846109f2565b6115ab91906120bd565b6000838152600760205260409020549091508082146115fe576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611643906001906120bd565b6000838152600960205260408120546008805493945090928490811061167957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600883815481106116a857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806116ee57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611715836109f2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b80356001600160a01b038116811461053257600080fd5b600060208284031215611776578081fd5b6111e18261174e565b60008060408385031215611791578081fd5b61179a8361174e565b91506117a86020840161174e565b90509250929050565b6000806000606084860312156117c5578081fd5b6117ce8461174e565b92506117dc6020850161174e565b9150604084013590509250925092565b60008060008060808587031215611801578081fd5b61180a8561174e565b9350602061181981870161174e565b935060408601359250606086013567ffffffffffffffff8082111561183c578384fd5b818801915088601f83011261184f578384fd5b81358181111561186157611861612196565b604051601f8201601f191681018501838111828210171561188457611884612196565b60405281815283820185018b101561189a578586fd5b81858501868301379081019093019390935250939692955090935050565b600080604083850312156118ca578182fd5b6118d38361174e565b9150602083013580151581146118e7578182fd5b809150509250929050565b60008060408385031215611904578182fd5b61190d8361174e565b946020939093013593505050565b60006020828403121561192c578081fd5b81356111e1816121ac565b600060208284031215611948578081fd5b81516111e1816121ac565b600060208284031215611964578081fd5b5035919050565b6000806040838503121561197d578182fd5b50508035926020909101359150565b600081518084526119a48160208601602086016120d4565b601f01601f19169290920160200192915050565b600083516119ca8184602088016120d4565b8351908301906119de8183602088016120d4565b01949350505050565b600082516119f98184602087016120d4565b64173539b7b760d91b920191825250600501919050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a5a9083018461198c565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082526111e1602083018461198c565b6020808252602b908201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760408201526a1a1a5b19481c185d5cd95960aa1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b602080825260059082015264131a5b5a5d60da1b604082015260600190565b61ffff91909116815260200190565b90815260200190565b600082198211156120855761208561216a565b500190565b60008261209957612099612180565b500490565b60008160001904831182151516156120b8576120b861216a565b500290565b6000828210156120cf576120cf61216a565b500390565b60005b838110156120ef5781810151838201526020016120d7565b83811115610b345750506000910152565b60028104600182168061211457607f821691505b6020821081141561213557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561214f5761214f61216a565b5060010190565b60008261216557612165612180565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461073457600080fdfe68747470733a2f2f67616c616765742e636f6d2f67616c616765742d636f6e74726163742d6d657461646174612e6a736f6ea26469706673582212203aba1bd29ba39173fe155d1eaf6c66ee363418c2420487349dd9cac3e773d33764736f6c63430008000033",
    "deployedBytecode": "6080604052600436106101b75760003560e01c8063559e775b116100ec57806395d89b411161008a578063c87b56dd11610064578063c87b56dd1461048e578063e8a3d485146104ae578063e985e9c5146104c3578063f2fde38b146104e3576101b7565b806395d89b4114610439578063a22cb4651461044e578063b88d4fde1461046e576101b7565b806370a08231116100c657806370a08231146103da578063715018a6146103fa5780638456cb591461040f5780638da5cb5b14610424576101b7565b8063559e775b146103855780635c975abb146103a55780636352211e146103ba576101b7565b806323b872dd116101595780633f4ba83a116101335780633f4ba83a1461031d57806342842e0e146103325780634f6ccce71461035257806351cff8d914610372576101b7565b806323b872dd146102af5780632a55205a146102cf5780632f745c59146102fd576101b7565b8063081812fc11610195578063081812fc14610236578063095ea7b31461026357806318160ddd146102855780632004ffd9146102a7576101b7565b806301ffc9a7146101bc578063031bd4c4146101f257806306fdde0314610214575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461191b565b610503565b6040516101e99190611a7d565b60405180910390f35b3480156101fe57600080fd5b50610207610537565b6040516101e9919061205a565b34801561022057600080fd5b5061022961053d565b6040516101e99190611a88565b34801561024257600080fd5b50610256610251366004611953565b6105cf565b6040516101e99190611a13565b34801561026f57600080fd5b5061028361027e3660046118f2565b61061b565b005b34801561029157600080fd5b5061029a6106b3565b6040516101e99190612069565b6102836106b9565b3480156102bb57600080fd5b506102836102ca3660046117b1565b610737565b3480156102db57600080fd5b506102ef6102ea36600461196b565b61076f565b6040516101e9929190611a64565b34801561030957600080fd5b5061029a6103183660046118f2565b61079e565b34801561032957600080fd5b506102836107f0565b34801561033e57600080fd5b5061028361034d3660046117b1565b610839565b34801561035e57600080fd5b5061029a61036d366004611953565b610854565b610283610380366004611765565b6108af565b34801561039157600080fd5b5061029a6103a0366004611953565b61095b565b3480156103b157600080fd5b506101dc6109b4565b3480156103c657600080fd5b506102566103d5366004611953565b6109bd565b3480156103e657600080fd5b5061029a6103f5366004611765565b6109f2565b34801561040657600080fd5b50610283610a36565b34801561041b57600080fd5b50610283610a7f565b34801561043057600080fd5b50610256610ac6565b34801561044557600080fd5b50610229610ada565b34801561045a57600080fd5b506102836104693660046118b8565b610ae9565b34801561047a57600080fd5b506102836104893660046117ec565b610afb565b34801561049a57600080fd5b506102296104a9366004611953565b610b3a565b3480156104ba57600080fd5b50610229610b6b565b3480156104cf57600080fd5b506101dc6104de36600461177f565b610b8b565b3480156104ef57600080fd5b506102836104fe366004611765565b610bb9565b60006001600160e01b0319821663152a902d60e11b141561052657506001610532565b61052f82610c27565b90505b919050565b61115c81565b60606000805461054c90612100565b80601f016020809104026020016040519081016040528092919081815260200182805461057890612100565b80156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b5050505050905090565b60006105da82610c4c565b6105ff5760405162461bcd60e51b81526004016105f690611e44565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610626826109bd565b9050806001600160a01b0316836001600160a01b0316141561065a5760405162461bcd60e51b81526004016105f690611f5d565b806001600160a01b031661066c610c69565b6001600160a01b031614806106885750610688816104de610c69565b6106a45760405162461bcd60e51b81526004016105f690611d1f565b6106ae8383610c6d565b505050565b60085490565b60006106c36106b3565b905061115c8111156106e75760405162461bcd60e51b81526004016105f69061203b565b6106ef610ac6565b6001600160a01b0316610700610c69565b6001600160a01b031614610723576107178161095b565b34101561072357600080fd5b61073461072e610c69565b82610cdb565b50565b610748610742610c69565b82610dba565b6107645760405162461bcd60e51b81526004016105f690611f9e565b6106ae838383610e3f565b60008061077a610ac6565b6127106107898561019061209e565b610793919061208a565b915091509250929050565b60006107a9836109f2565b82106107c75760405162461bcd60e51b81526004016105f690611b14565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107f8610c69565b6001600160a01b0316610809610ac6565b6001600160a01b03161461082f5760405162461bcd60e51b81526004016105f690611e90565b610837610f6c565b565b6106ae83838360405180602001604052806000815250610afb565b600061085e6106b3565b821061087c5760405162461bcd60e51b81526004016105f690611fef565b6008828154811061089d57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6108b7610c69565b6001600160a01b03166108c8610ac6565b6001600160a01b0316146108ee5760405162461bcd60e51b81526004016105f690611e90565b6000816001600160a01b03164760405161090790611a10565b60006040518083038185875af1925050503d8060008114610944576040519150601f19603f3d011682016040523d82523d6000602084013e610949565b606091505b505090508061095757600080fd5b5050565b6000610457821015610975575066470de4df820000610532565b6108ae82101561098d5750668e1bc9bf040000610532565b610d058210156109a5575066d529ae9e860000610532565b5067011c37937e080000610532565b600a5460ff1690565b6000818152600260205260408120546001600160a01b03168061052f5760405162461bcd60e51b81526004016105f690611dc6565b60006001600160a01b038216610a1a5760405162461bcd60e51b81526004016105f690611d7c565b506001600160a01b031660009081526003602052604090205490565b610a3e610c69565b6001600160a01b0316610a4f610ac6565b6001600160a01b031614610a755760405162461bcd60e51b81526004016105f690611e90565b6108376000610fda565b610a87610c69565b6001600160a01b0316610a98610ac6565b6001600160a01b031614610abe5760405162461bcd60e51b81526004016105f690611e90565b610837611034565b600a5461010090046001600160a01b031690565b60606001805461054c90612100565b610957610af4610c69565b838361108f565b610b0c610b06610c69565b83610dba565b610b285760405162461bcd60e51b81526004016105f690611f9e565b610b3484848484611132565b50505050565b6060610b4582611165565b604051602001610b5591906119e7565b6040516020818303038152906040529050919050565b60606040518060600160405280603281526020016121c360329139905090565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610bc1610c69565b6001600160a01b0316610bd2610ac6565b6001600160a01b031614610bf85760405162461bcd60e51b81526004016105f690611e90565b6001600160a01b038116610c1e5760405162461bcd60e51b81526004016105f690611bb1565b61073481610fda565b60006001600160e01b0319821663780e9d6360e01b148061052f575061052f826111e8565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ca2826109bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610d015760405162461bcd60e51b81526004016105f690611e0f565b610d0a81610c4c565b15610d275760405162461bcd60e51b81526004016105f690611bf7565b610d3360008383611228565b6001600160a01b0382166000908152600360205260408120805460019290610d5c908490612072565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610dc582610c4c565b610de15760405162461bcd60e51b81526004016105f690611ca9565b6000610dec836109bd565b9050806001600160a01b0316846001600160a01b03161480610e275750836001600160a01b0316610e1c846105cf565b6001600160a01b0316145b80610e375750610e378185610b8b565b949350505050565b826001600160a01b0316610e52826109bd565b6001600160a01b031614610e785760405162461bcd60e51b81526004016105f690611ec5565b6001600160a01b038216610e9e5760405162461bcd60e51b81526004016105f690611c2e565b610ea9838383611228565b610eb4600082610c6d565b6001600160a01b0383166000908152600360205260408120805460019290610edd9084906120bd565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f0b908490612072565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610f746109b4565b610f905760405162461bcd60e51b81526004016105f690611ae6565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610fc3610c69565b604051610fd09190611a13565b60405180910390a1565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61103c6109b4565b156110595760405162461bcd60e51b81526004016105f690611cf5565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fc3610c69565b816001600160a01b0316836001600160a01b031614156110c15760405162461bcd60e51b81526004016105f690611c72565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190611125908590611a7d565b60405180910390a3505050565b61113d848484610e3f565b61114984848484611233565b610b345760405162461bcd60e51b81526004016105f690611b5f565b606061117082610c4c565b61118c5760405162461bcd60e51b81526004016105f690611f0e565b600061119661134e565b905060008151116111b657604051806020016040528060008152506111e1565b806111c08461135d565b6040516020016111d19291906119b8565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b148061121957506001600160e01b03198216635b5e139f60e01b145b8061052f575061052f82611478565b6106ae838383611491565b6000611247846001600160a01b03166114c1565b1561134357836001600160a01b031663150b7a02611263610c69565b8786866040518563ffffffff1660e01b81526004016112859493929190611a27565b602060405180830381600087803b15801561129f57600080fd5b505af19250505080156112cf575060408051601f3d908101601f191682019092526112cc91810190611937565b60015b611329573d8080156112fd576040519150601f19603f3d011682016040523d82523d6000602084013e611302565b606091505b5080516113215760405162461bcd60e51b81526004016105f690611b5f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e37565b506001949350505050565b6060600b805461054c90612100565b60608161138257506040805180820190915260018152600360fc1b6020820152610532565b8160005b81156113ac57806113968161213b565b91506113a59050600a8361208a565b9150611386565b60008167ffffffffffffffff8111156113d557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113ff576020820181803683370190505b5090505b8415610e37576114146001836120bd565b9150611421600a86612156565b61142c906030612072565b60f81b81838151811061144f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611471600a8661208a565b9450611403565b6001600160e01b031981166301ffc9a760e01b14919050565b61149c8383836114c7565b6114a46109b4565b156106ae5760405162461bcd60e51b81526004016105f690611a9b565b3b151590565b6114d28383836106ae565b6001600160a01b0383166114ee576114e981611550565b611511565b816001600160a01b0316836001600160a01b031614611511576115118382611594565b6001600160a01b03821661152d5761152881611631565b6106ae565b826001600160a01b0316826001600160a01b0316146106ae576106ae828261170a565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b600060016115a1846109f2565b6115ab91906120bd565b6000838152600760205260409020549091508082146115fe576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611643906001906120bd565b6000838152600960205260408120546008805493945090928490811061167957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600883815481106116a857634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806116ee57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b6000611715836109f2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b80356001600160a01b038116811461053257600080fd5b600060208284031215611776578081fd5b6111e18261174e565b60008060408385031215611791578081fd5b61179a8361174e565b91506117a86020840161174e565b90509250929050565b6000806000606084860312156117c5578081fd5b6117ce8461174e565b92506117dc6020850161174e565b9150604084013590509250925092565b60008060008060808587031215611801578081fd5b61180a8561174e565b9350602061181981870161174e565b935060408601359250606086013567ffffffffffffffff8082111561183c578384fd5b818801915088601f83011261184f578384fd5b81358181111561186157611861612196565b604051601f8201601f191681018501838111828210171561188457611884612196565b60405281815283820185018b101561189a578586fd5b81858501868301379081019093019390935250939692955090935050565b600080604083850312156118ca578182fd5b6118d38361174e565b9150602083013580151581146118e7578182fd5b809150509250929050565b60008060408385031215611904578182fd5b61190d8361174e565b946020939093013593505050565b60006020828403121561192c578081fd5b81356111e1816121ac565b600060208284031215611948578081fd5b81516111e1816121ac565b600060208284031215611964578081fd5b5035919050565b6000806040838503121561197d578182fd5b50508035926020909101359150565b600081518084526119a48160208601602086016120d4565b601f01601f19169290920160200192915050565b600083516119ca8184602088016120d4565b8351908301906119de8183602088016120d4565b01949350505050565b600082516119f98184602087016120d4565b64173539b7b760d91b920191825250600501919050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a5a9083018461198c565b9695505050505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082526111e1602083018461198c565b6020808252602b908201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760408201526a1a1a5b19481c185d5cd95960aa1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b602080825260059082015264131a5b5a5d60da1b604082015260600190565b61ffff91909116815260200190565b90815260200190565b600082198211156120855761208561216a565b500190565b60008261209957612099612180565b500490565b60008160001904831182151516156120b8576120b861216a565b500290565b6000828210156120cf576120cf61216a565b500390565b60005b838110156120ef5781810151838201526020016120d7565b83811115610b345750506000910152565b60028104600182168061211457607f821691505b6020821081141561213557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561214f5761214f61216a565b5060010190565b60008261216557612165612180565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461073457600080fdfe68747470733a2f2f67616c616765742e636f6d2f67616c616765742d636f6e74726163742d6d657461646174612e6a736f6ea26469706673582212203aba1bd29ba39173fe155d1eaf6c66ee363418c2420487349dd9cac3e773d33764736f6c63430008000033",
    "sourceMap": "676:3094:0:-:0;;;1044:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13:3;;1133:4:0;;1139:6;;1441:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:2;:15;;-1:-1:-1;;981:15:2;;;-1:-1:-1;921:32:1;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;1157:28:0;;::::1;::::0;:13:::1;::::0;:28:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1044:148:::0;;;676:3094;;640:96:11;719:10;640:96;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2270:187;;:::o;676:3094:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:3094:0;;;-1:-1:-1;676:3094:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:15;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:15;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:15;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:15;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:15;80:815;-1:-1:-1;;;;;80:815:15:o;900:812::-;;;;1087:2;1075:9;1066:7;1062:23;1058:32;1055:2;;;1108:6;1100;1093:22;1055:2;1140:16;;-1:-1:-1;;;;;1205:14:15;;;1202:2;;;1237:6;1229;1222:22;1202:2;1265:63;1320:7;1311:6;1300:9;1296:22;1265:63;:::i;:::-;1255:73;;1374:2;1363:9;1359:18;1353:25;1337:41;;1403:2;1393:8;1390:16;1387:2;;;1424:6;1416;1409:22;1387:2;1452:65;1509:7;1498:8;1487:9;1483:24;1452:65;:::i;:::-;1442:75;;1563:2;1552:9;1548:18;1542:25;1526:41;;1592:2;1582:8;1579:16;1576:2;;;1613:6;1605;1598:22;1576:2;;1641:65;1698:7;1687:8;1676:9;1672:24;1641:65;:::i;:::-;1631:75;;;1045:667;;;;;:::o;1717:380::-;1802:1;1792:12;;1849:1;1839:12;;;1860:2;;1914:4;1906:6;1902:17;1892:27;;1860:2;1967;1959:6;1956:14;1936:18;1933:38;1930:2;;;2013:10;2008:3;2004:20;2001:1;1994:31;2048:4;2045:1;2038:15;2076:4;2073:1;2066:15;1930:2;;1772:325;;;:::o;2102:127::-;2163:10;2158:3;2154:20;2151:1;2144:31;2194:4;2191:1;2184:15;2218:4;2215:1;2208:15;2134:95;676:3094:0;;;;;;",
    "deployedSourceMap": "676:3094:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3340:264;;;;;;;;;;-1:-1:-1;3340:264:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2473:98:3:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3522:401::-;;;;;;;;;;-1:-1:-1;3522:401:3;;;;;:::i;:::-;;:::i;:::-;;1615:111:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1547:286:0:-;;;:::i;4711:330:3:-;;;;;;;;;;-1:-1:-1;4711:330:3;;;;;:::i;:::-;;:::i;3097:176:0:-;;;;;;;;;;-1:-1:-1;3097:176:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1291:253:6:-;;;;;;;;;;-1:-1:-1;1291:253:6;;;;;:::i;:::-;;:::i;2606:71:0:-;;;;;;;;;;;;;:::i;5107:179:3:-;;;;;;;;;;-1:-1:-1;5107:179:3;;;;;:::i;:::-;;:::i;1798:230:6:-;;;;;;;;;;-1:-1:-1;1798:230:6;;;;;:::i;:::-;;:::i;2914:177:0:-;;;;;;:::i;:::-;;:::i;1198:343::-;;;;;;;;;;-1:-1:-1;1198:343:0;;;;;:::i;:::-;;:::i;1098:84:2:-;;;;;;;;;;;;;:::i;2176:235:3:-;;;;;;;;;;-1:-1:-1;2176:235:3;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;;;;;-1:-1:-1;1914:205:3;;;;;:::i;:::-;;:::i;1668:101:1:-;;;;;;;;;;;;;:::i;2331:67:0:-;;;;;;;;;;;;;:::i;1036:85:1:-;;;;;;;;;;;;;:::i;2635:102:3:-;;;;;;;;;;;;;:::i;4268:153::-;;;;;;;;;;-1:-1:-1;4268:153:3;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;;;;;-1:-1:-1;5352:320:3;;;;;:::i;:::-;;:::i;1957:170:0:-;;;;;;;;;;-1:-1:-1;1957:170:0;;;;;:::i;:::-;;:::i;3631:137::-;;;;;;;;;;;;;:::i;4487:162:3:-;;;;;;;;;;-1:-1:-1;4487:162:3;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;;;;;-1:-1:-1;1918:198:1;;;;;:::i;:::-;;:::i;3340:264:0:-;3451:4;-1:-1:-1;;;;;;3471:36:0;;-1:-1:-1;;;3471:36:0;3467:78;;;-1:-1:-1;3530:4:0;3523:11;;3467:78;3561:36;3585:11;3561:23;:36::i;:::-;3554:43;;3340:264;;;;:::o;870:41::-;907:4;870:41;:::o;2473:98:3:-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:3;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4170:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:3;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:3;:2;-1:-1:-1;;;;;3659:11:3;;;3651:57;;;;-1:-1:-1;;;3651:57:3;;;;;;;:::i;:::-;3756:5;-1:-1:-1;;;;;3740:21:3;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3740:21:3;;:62;;;;3765:37;3782:5;3789:12;:10;:12::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:3;;;;;;;:::i;:::-;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3522:401;;;:::o;1615:111:6:-;1702:10;:17;1615:111;:::o;1547:286:0:-;1601:15;1619:13;:11;:13::i;:::-;1601:31;-1:-1:-1;907:4:0;1650:22;;;1642:40;;;;-1:-1:-1;;;1642:40:0;;;;;;;:::i;:::-;1712:7;:5;:7::i;:::-;-1:-1:-1;;;;;1696:23:0;:12;:10;:12::i;:::-;-1:-1:-1;;;;;1696:23:0;;1692:97;;1756:21;1769:7;1756:12;:21::i;:::-;1743:9;:34;;1735:43;;;;;;1798:28;1804:12;:10;:12::i;:::-;1818:7;1798:5;:28::i;:::-;1547:286;:::o;4711:330:3:-;4900:41;4919:12;:10;:12::i;:::-;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:3;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;3097:176:0:-;3171:16;3189:21;3230:7;:5;:7::i;:::-;3260:5;3240:16;:10;3253:3;3240:16;:::i;:::-;3239:26;;;;:::i;:::-;3222:44;;;;3097:176;;;;;:::o;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;2606:71:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2660:10:0::1;:8;:10::i;:::-;2606:71::o:0;5107:179:3:-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;1798:230:6:-;1873:7;1908:30;:28;:30::i;:::-;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;;;;;;:::i;:::-;2004:10;2015:5;2004:17;;;;;;-1:-1:-1;;;2004:17:6;;;;;;;;;;;;;;;;;1997:24;;1798:230;;;:::o;2914:177:0:-;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2989:9:0::1;3011;-1:-1:-1::0;;;;;3003:23:0::1;3035:21;3003:58;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2988:73;;;3079:4;3071:13;;;::::0;::::1;;1318:1:1;2914:177:0::0;:::o;1198:343::-;1258:7;1291:4;1281:7;:14;1277:258;;;-1:-1:-1;1318:13:0;1311:20;;1277:258;1362:4;1352:7;:14;1348:187;;;-1:-1:-1;1389:13:0;1382:20;;1348:187;1433:4;1423:7;:14;1419:116;;;-1:-1:-1;1460:13:0;1453:20;;1419:116;-1:-1:-1;1511:13:0;1504:20;;1098:84:2;1168:7;;;;1098:84;:::o;2176:235:3:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:3;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:3;;;;;;;:::i;1914:205::-;1986:7;-1:-1:-1;;;;;2013:19:3;;2005:74;;;;-1:-1:-1;;;2005:74:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2096:16:3;;;;;:9;:16;;;;;;;1914:205::o;1668:101:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;2331:67:0:-:0;1259:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;2383:8:0::1;:6;:8::i;1036:85:1:-:0;1108:6;;;;;-1:-1:-1;;;;;1108:6:1;;1036:85::o;2635:102:3:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;4381:12;:10;:12::i;:::-;4395:8;4405;4362:18;:52::i;5352:320::-;5521:41;5540:12;:10;:12::i;:::-;5554:7;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:3;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;1957:170:0:-;2030:13;2086:23;2101:7;2086:14;:23::i;:::-;2069:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;2055:65;;1957:170;;;:::o;3631:137::-;3677:13;3702:59;;;;;;;;;;;;;;;;;;;3631:137;:::o;4487:162:3:-;-1:-1:-1;;;;;4607:25:3;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162::o;1918:198:1:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:1;;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:1::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;990:222:6:-:0;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;7144:125:3:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:3;:30;;;7144:125::o;640:96:11:-;719:10;640:96;:::o;10995:171:3:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:3;-1:-1:-1;;;;;11069:29:3;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:3;;;;;;;;;;;10995:171;;:::o;9063:372::-;-1:-1:-1;;;;;9142:16:3;;9134:61;;;;-1:-1:-1;;;9134:61:3;;;;;;;:::i;:::-;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:3;;;;;;;:::i;:::-;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:3;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:3;-1:-1:-1;;;;;9358:21:3;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:3;;;;;;;:::i;:::-;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:3;:7;-1:-1:-1;;;;;7676:16:3;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:3;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:3;;7676:51;:87;;;;7731:32;7748:5;7755:7;7731:16;:32::i;:::-;7668:96;7427:344;-1:-1:-1;;;;7427:344:3:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:3;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:3;;10443:85;;;;-1:-1:-1;;;10443:85:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10546:16:3;;10538:65;;;;-1:-1:-1;;;10538:65:3;;;;;;;:::i;:::-;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:3;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:3;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:3;-1:-1:-1;;;;;10813:21:3;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;2110:117:2:-;1677:8;:6;:8::i;:::-;1669:41;;;;-1:-1:-1;;;1669:41:2;;;;;;;:::i;:::-;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:2::1;::::0;;2198:22:::1;2207:12;:10;:12::i;:::-;2198:22;;;;;;:::i;:::-;;;;;;;;2110:117::o:0;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2270:187;;:::o;1863:115:2:-;1412:8;:6;:8::i;:::-;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:2;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:2::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;:10;:12::i;11301:307:3:-:0;11451:8;-1:-1:-1;;;;;11442:17:3;:5;-1:-1:-1;;;;;11442:17:3;;;11434:55;;;;-1:-1:-1;;;11434:55:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11499:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:3;;;;;;;11560:41;;;;;11499:46;;11560:41;:::i;:::-;;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:3;;;;;;;:::i;2803:329::-;2876:13;2909:16;2917:7;2909;:16::i;:::-;2901:76;;;;-1:-1:-1;;;2901:76:3;;;;;;;:::i;:::-;2988:21;3012:10;:8;:10::i;:::-;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:3:o;1555:300::-;1657:4;-1:-1:-1;;;;;;1692:40:3;;-1:-1:-1;;;1692:40:3;;:104;;-1:-1:-1;;;;;;;1748:48:3;;-1:-1:-1;;;1748:48:3;1692:104;:156;;;;1812:36;1836:11;1812:23;:36::i;2683:225:0:-;2856:45;2883:4;2889:2;2893:7;2856:26;:45::i;12161:778:3:-;12311:4;12331:15;:2;-1:-1:-1;;;;;12331:13:3;;:15::i;:::-;12327:606;;;12382:2;-1:-1:-1;;;;;12366:36:3;;12403:12;:10;:12::i;:::-;12417:4;12423:7;12432:5;12366:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:3;;;;;;;;-1:-1:-1;;12366:72:3;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:3;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:3;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:3;-1:-1:-1;;;12488:51:3;;-1:-1:-1;12481:58:3;;12327:606;-1:-1:-1;12918:4:3;12161:778;;;;;;:::o;1839:112:0:-;1899:13;1931;1924:20;;;;;:::i;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;;597:51;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:12;;;;;;;;;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;829:155:13;-1:-1:-1;;;;;;937:40:13;;-1:-1:-1;;;937:40:13;829:155;;;:::o;672:267:7:-;811:45;838:4;844:2;848:7;811:26;:45::i;:::-;876:8;:6;:8::i;:::-;875:9;867:65;;;;-1:-1:-1;;;867:65:7;;;;;;;:::i;771:377:10:-;1087:20;1133:8;;;771:377::o;2624:572:6:-;2763:45;2790:4;2796:2;2800:7;2763:26;:45::i;:::-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;2857:31;:40::i;:::-;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;:::-;3011:179;;;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;3902:161::-;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161::o;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;-1:-1:-1;;;6632:26:6;;;;;;;;;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;-1:-1:-1;;;6669:22:6;;;;;;;;;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;-1:-1:-1;;;6976:16:6;;;;;;;;;;;;;;;;;;;;;;;;;;5938:1061;;;;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;14:175:15:-;84:20;;-1:-1:-1;;;;;133:31:15;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:1178::-;;;;;1195:3;1183:9;1174:7;1170:23;1166:33;1163:2;;;1217:6;1209;1202:22;1163:2;1245:31;1266:9;1245:31;:::i;:::-;1235:41;;1295:2;1316:40;1352:2;1341:9;1337:18;1316:40;:::i;:::-;1306:50;;1403:2;1392:9;1388:18;1375:32;1365:42;;1458:2;1447:9;1443:18;1430:32;1481:18;1522:2;1514:6;1511:14;1508:2;;;1543:6;1535;1528:22;1508:2;1586:6;1575:9;1571:22;1561:32;;1631:7;1624:4;1620:2;1616:13;1612:27;1602:2;;1658:6;1650;1643:22;1602:2;1699;1686:16;1721:2;1717;1714:10;1711:2;;;1727:18;;:::i;:::-;1776:2;1770:9;1845:2;1826:13;;-1:-1:-1;;1822:27:15;1810:40;;1806:49;;1870:18;;;1890:22;;;1867:46;1864:2;;;1916:18;;:::i;:::-;1952:2;1945:22;1976:18;;;2013:11;;;2009:20;;2006:33;-1:-1:-1;2003:2:15;;;2057:6;2049;2042:22;2003:2;2118;2113;2109;2105:11;2100:2;2092:6;2088:15;2075:46;2141:15;;;2137:24;;;2130:40;;;;-1:-1:-1;1153:1048:15;;;;-1:-1:-1;1153:1048:15;;-1:-1:-1;;1153:1048:15:o;2206:369::-;;;2332:2;2320:9;2311:7;2307:23;2303:32;2300:2;;;2353:6;2345;2338:22;2300:2;2381:31;2402:9;2381:31;:::i;:::-;2371:41;;2462:2;2451:9;2447:18;2434:32;2509:5;2502:13;2495:21;2488:5;2485:32;2475:2;;2536:6;2528;2521:22;2475:2;2564:5;2554:15;;;2290:285;;;;;:::o;2580:266::-;;;2709:2;2697:9;2688:7;2684:23;2680:32;2677:2;;;2730:6;2722;2715:22;2677:2;2758:31;2779:9;2758:31;:::i;:::-;2748:41;2836:2;2821:18;;;;2808:32;;-1:-1:-1;;;2667:179:15:o;2851:257::-;;2962:2;2950:9;2941:7;2937:23;2933:32;2930:2;;;2983:6;2975;2968:22;2930:2;3027:9;3014:23;3046:32;3072:5;3046:32;:::i;3113:261::-;;3235:2;3223:9;3214:7;3210:23;3206:32;3203:2;;;3256:6;3248;3241:22;3203:2;3293:9;3287:16;3312:32;3338:5;3312:32;:::i;3379:190::-;;3491:2;3479:9;3470:7;3466:23;3462:32;3459:2;;;3512:6;3504;3497:22;3459:2;-1:-1:-1;3540:23:15;;3449:120;-1:-1:-1;3449:120:15:o;3574:258::-;;;3703:2;3691:9;3682:7;3678:23;3674:32;3671:2;;;3724:6;3716;3709:22;3671:2;-1:-1:-1;;3752:23:15;;;3822:2;3807:18;;;3794:32;;-1:-1:-1;3661:171:15:o;3837:259::-;;3918:5;3912:12;3945:6;3940:3;3933:19;3961:63;4017:6;4010:4;4005:3;4001:14;3994:4;3987:5;3983:16;3961:63;:::i;:::-;4078:2;4057:15;-1:-1:-1;;4053:29:15;4044:39;;;;4085:4;4040:50;;3888:208;-1:-1:-1;;3888:208:15:o;4101:470::-;;4318:6;4312:13;4334:53;4380:6;4375:3;4368:4;4360:6;4356:17;4334:53;:::i;:::-;4450:13;;4409:16;;;;4472:57;4450:13;4409:16;4506:4;4494:17;;4472:57;:::i;:::-;4545:20;;4288:283;-1:-1:-1;;;;4288:283:15:o;4576:443::-;;4846:6;4840:13;4862:53;4908:6;4903:3;4896:4;4888:6;4884:17;4862:53;:::i;:::-;-1:-1:-1;;;4937:16:15;;4962:22;;;-1:-1:-1;5011:1:15;5000:13;;4816:203;-1:-1:-1;4816:203:15:o;5024:205::-;5224:3;5215:14::o;5234:203::-;-1:-1:-1;;;;;5398:32:15;;;;5380:51;;5368:2;5353:18;;5335:102::o;5442:490::-;-1:-1:-1;;;;;5711:15:15;;;5693:34;;5763:15;;5758:2;5743:18;;5736:43;5810:2;5795:18;;5788:34;;;5858:3;5853:2;5838:18;;5831:31;;;5442:490;;5879:47;;5906:19;;5898:6;5879:47;:::i;:::-;5871:55;5645:287;-1:-1:-1;;;;;;5645:287:15:o;5937:274::-;-1:-1:-1;;;;;6129:32:15;;;;6111:51;;6193:2;6178:18;;6171:34;6099:2;6084:18;;6066:145::o;6216:187::-;6381:14;;6374:22;6356:41;;6344:2;6329:18;;6311:92::o;6408:221::-;;6557:2;6546:9;6539:21;6577:46;6619:2;6608:9;6604:18;6596:6;6577:46;:::i;6634:407::-;6836:2;6818:21;;;6875:2;6855:18;;;6848:30;6914:34;6909:2;6894:18;;6887:62;-1:-1:-1;;;6980:2:15;6965:18;;6958:41;7031:3;7016:19;;6808:233::o;7046:344::-;7248:2;7230:21;;;7287:2;7267:18;;;7260:30;-1:-1:-1;;;7321:2:15;7306:18;;7299:50;7381:2;7366:18;;7220:170::o;7395:407::-;7597:2;7579:21;;;7636:2;7616:18;;;7609:30;7675:34;7670:2;7655:18;;7648:62;-1:-1:-1;;;7741:2:15;7726:18;;7719:41;7792:3;7777:19;;7569:233::o;7807:414::-;8009:2;7991:21;;;8048:2;8028:18;;;8021:30;8087:34;8082:2;8067:18;;8060:62;-1:-1:-1;;;8153:2:15;8138:18;;8131:48;8211:3;8196:19;;7981:240::o;8226:402::-;8428:2;8410:21;;;8467:2;8447:18;;;8440:30;8506:34;8501:2;8486:18;;8479:62;-1:-1:-1;;;8572:2:15;8557:18;;8550:36;8618:3;8603:19;;8400:228::o;8633:352::-;8835:2;8817:21;;;8874:2;8854:18;;;8847:30;8913;8908:2;8893:18;;8886:58;8976:2;8961:18;;8807:178::o;8990:400::-;9192:2;9174:21;;;9231:2;9211:18;;;9204:30;9270:34;9265:2;9250:18;;9243:62;-1:-1:-1;;;9336:2:15;9321:18;;9314:34;9380:3;9365:19;;9164:226::o;9395:349::-;9597:2;9579:21;;;9636:2;9616:18;;;9609:30;9675:27;9670:2;9655:18;;9648:55;9735:2;9720:18;;9569:175::o;9749:408::-;9951:2;9933:21;;;9990:2;9970:18;;;9963:30;10029:34;10024:2;10009:18;;10002:62;-1:-1:-1;;;10095:2:15;10080:18;;10073:42;10147:3;10132:19;;9923:234::o;10162:340::-;10364:2;10346:21;;;10403:2;10383:18;;;10376:30;-1:-1:-1;;;10437:2:15;10422:18;;10415:46;10493:2;10478:18;;10336:166::o;10507:420::-;10709:2;10691:21;;;10748:2;10728:18;;;10721:30;10787:34;10782:2;10767:18;;10760:62;10858:26;10853:2;10838:18;;10831:54;10917:3;10902:19;;10681:246::o;10932:406::-;11134:2;11116:21;;;11173:2;11153:18;;;11146:30;11212:34;11207:2;11192:18;;11185:62;-1:-1:-1;;;11278:2:15;11263:18;;11256:40;11328:3;11313:19;;11106:232::o;11343:405::-;11545:2;11527:21;;;11584:2;11564:18;;;11557:30;11623:34;11618:2;11603:18;;11596:62;-1:-1:-1;;;11689:2:15;11674:18;;11667:39;11738:3;11723:19;;11517:231::o;11753:356::-;11955:2;11937:21;;;11974:18;;;11967:30;12033:34;12028:2;12013:18;;12006:62;12100:2;12085:18;;11927:182::o;12114:408::-;12316:2;12298:21;;;12355:2;12335:18;;;12328:30;12394:34;12389:2;12374:18;;12367:62;-1:-1:-1;;;12460:2:15;12445:18;;12438:42;12512:3;12497:19;;12288:234::o;12527:356::-;12729:2;12711:21;;;12748:18;;;12741:30;12807:34;12802:2;12787:18;;12780:62;12874:2;12859:18;;12701:182::o;12888:405::-;13090:2;13072:21;;;13129:2;13109:18;;;13102:30;13168:34;13163:2;13148:18;;13141:62;-1:-1:-1;;;13234:2:15;13219:18;;13212:39;13283:3;13268:19;;13062:231::o;13298:411::-;13500:2;13482:21;;;13539:2;13519:18;;;13512:30;13578:34;13573:2;13558:18;;13551:62;-1:-1:-1;;;13644:2:15;13629:18;;13622:45;13699:3;13684:19;;13472:237::o;13714:397::-;13916:2;13898:21;;;13955:2;13935:18;;;13928:30;13994:34;13989:2;13974:18;;13967:62;-1:-1:-1;;;14060:2:15;14045:18;;14038:31;14101:3;14086:19;;13888:223::o;14116:413::-;14318:2;14300:21;;;14357:2;14337:18;;;14330:30;14396:34;14391:2;14376:18;;14369:62;-1:-1:-1;;;14462:2:15;14447:18;;14440:47;14519:3;14504:19;;14290:239::o;14534:408::-;14736:2;14718:21;;;14775:2;14755:18;;;14748:30;14814:34;14809:2;14794:18;;14787:62;-1:-1:-1;;;14880:2:15;14865:18;;14858:42;14932:3;14917:19;;14708:234::o;14947:328::-;15149:2;15131:21;;;15188:1;15168:18;;;15161:29;-1:-1:-1;;;15221:2:15;15206:18;;15199:35;15266:2;15251:18;;15121:154::o;15280:188::-;15454:6;15442:19;;;;15424:38;;15412:2;15397:18;;15379:89::o;15473:177::-;15619:25;;;15607:2;15592:18;;15574:76::o;15655:128::-;;15726:1;15722:6;15719:1;15716:13;15713:2;;;15732:18;;:::i;:::-;-1:-1:-1;15768:9:15;;15703:80::o;15788:120::-;;15854:1;15844:2;;15859:18;;:::i;:::-;-1:-1:-1;15893:9:15;;15834:74::o;15913:168::-;;16019:1;16015;16011:6;16007:14;16004:1;16001:21;15996:1;15989:9;15982:17;15978:45;15975:2;;;16026:18;;:::i;:::-;-1:-1:-1;16066:9:15;;15965:116::o;16086:125::-;;16154:1;16151;16148:8;16145:2;;;16159:18;;:::i;:::-;-1:-1:-1;16196:9:15;;16135:76::o;16216:258::-;16288:1;16298:113;16312:6;16309:1;16306:13;16298:113;;;16388:11;;;16382:18;16369:11;;;16362:39;16334:2;16327:10;16298:113;;;16429:6;16426:1;16423:13;16420:2;;;-1:-1:-1;;16464:1:15;16446:16;;16439:27;16269:205::o;16479:380::-;16564:1;16554:12;;16611:1;16601:12;;;16622:2;;16676:4;16668:6;16664:17;16654:27;;16622:2;16729;16721:6;16718:14;16698:18;16695:38;16692:2;;;16775:10;16770:3;16766:20;16763:1;16756:31;16810:4;16807:1;16800:15;16838:4;16835:1;16828:15;16692:2;;16534:325;;;:::o;16864:135::-;;-1:-1:-1;;16924:17:15;;16921:2;;;16944:18;;:::i;:::-;-1:-1:-1;16991:1:15;16980:13;;16911:88::o;17004:112::-;;17062:1;17052:2;;17067:18;;:::i;:::-;-1:-1:-1;17101:9:15;;17042:74::o;17121:127::-;17182:10;17177:3;17173:20;17170:1;17163:31;17213:4;17210:1;17203:15;17237:4;17234:1;17227:15;17253:127;17314:10;17309:3;17305:20;17302:1;17295:31;17345:4;17342:1;17335:15;17369:4;17366:1;17359:15;17385:127;17446:10;17441:3;17437:20;17434:1;17427:31;17477:4;17474:1;17467:15;17501:4;17498:1;17491:15;17517:133;-1:-1:-1;;;;;;17593:32:15;;17583:43;;17573:2;;17640:1;17637;17630:12",
    "sourcePath": "/Users/taylorsloan/Projects/galaget-contract/contracts/Galaget.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/contracts/Galaget.sol",
        "exportedSymbols": {
            "Address": [
                2157
            ],
            "Context": [
                2179
            ],
            "ERC165": [
                2406
            ],
            "ERC721": [
                1293
            ],
            "ERC721Enumerable": [
                1765
            ],
            "ERC721Pausable": [
                1802
            ],
            "Galaget": [
                265
            ],
            "IERC165": [
                2418
            ],
            "IERC721": [
                1409
            ],
            "IERC721Enumerable": [
                1833
            ],
            "IERC721Metadata": [
                1860
            ],
            "IERC721Receiver": [
                1427
            ],
            "Ownable": [
                370
            ],
            "Pausable": [
                462
            ],
            "Strings": [
                2382
            ]
        },
        "id": 266,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 266,
                "sourceUnit": 1294,
                "src": "57:115:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                "file": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 266,
                "sourceUnit": 1766,
                "src": "173:136:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
                "file": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 266,
                "sourceUnit": 1803,
                "src": "310:134:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/Context.sol",
                "file": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/utils/Context.sol",
                "id": 5,
                "nodeType": "ImportDirective",
                "scope": 266,
                "sourceUnit": 2180,
                "src": "445:109:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/Users/taylorsloan/Projects/galaget-contract/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 6,
                "nodeType": "ImportDirective",
                "scope": 266,
                "sourceUnit": 371,
                "src": "555:110:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 7,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2179,
                            "src": "700:7:0"
                        },
                        "id": 8,
                        "nodeType": "InheritanceSpecifier",
                        "src": "700:7:0"
                    },
                    {
                        "baseName": {
                            "id": 9,
                            "name": "ERC721Enumerable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1765,
                            "src": "713:16:0"
                        },
                        "id": 10,
                        "nodeType": "InheritanceSpecifier",
                        "src": "713:16:0"
                    },
                    {
                        "baseName": {
                            "id": 11,
                            "name": "ERC721Pausable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1802,
                            "src": "735:14:0"
                        },
                        "id": 12,
                        "nodeType": "InheritanceSpecifier",
                        "src": "735:14:0"
                    },
                    {
                        "baseName": {
                            "id": 13,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 370,
                            "src": "755:7:0"
                        },
                        "id": 14,
                        "nodeType": "InheritanceSpecifier",
                        "src": "755:7:0"
                    }
                ],
                "contractDependencies": [
                    370,
                    462,
                    1293,
                    1409,
                    1765,
                    1802,
                    1833,
                    1860,
                    2179,
                    2406,
                    2418
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 265,
                "linearizedBaseContracts": [
                    265,
                    370,
                    1802,
                    462,
                    1765,
                    1833,
                    1293,
                    1860,
                    1409,
                    2406,
                    2418,
                    2179
                ],
                "name": "Galaget",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "_baseTokenURI",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "770:28:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 15,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "770:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": true,
                        "id": 19,
                        "mutability": "constant",
                        "name": "_INTERFACE_ID_ERC2981",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "805:58:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                        },
                        "typeName": {
                            "id": 17,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "805:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                            }
                        },
                        "value": {
                            "hexValue": "30783261353532303561",
                            "id": 18,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "853:10:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_710221914_by_1",
                                "typeString": "int_const 710221914"
                            },
                            "value": "0x2a55205a"
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": true,
                        "functionSelector": "031bd4c4",
                        "id": 22,
                        "mutability": "constant",
                        "name": "TOKEN_LIMIT",
                        "nodeType": "VariableDeclaration",
                        "scope": 265,
                        "src": "870:41:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                        },
                        "typeName": {
                            "id": 20,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "870:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                            }
                        },
                        "value": {
                            "hexValue": "34343434",
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "907:4:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_4444_by_1",
                                "typeString": "int_const 4444"
                            },
                            "value": "4444"
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40,
                            "nodeType": "Block",
                            "src": "1147:45:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 36,
                                            "name": "_baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 16,
                                            "src": "1157:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 37,
                                            "name": "baseTokenURI",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 29,
                                            "src": "1173:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "1157:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 39,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1157:28:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 23,
                            "nodeType": "StructuredDocumentation",
                            "src": "918:121:0",
                            "text": " Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
                        },
                        "id": 41,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 32,
                                        "name": "name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "1133:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 33,
                                        "name": "symbol",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 27,
                                        "src": "1139:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    }
                                ],
                                "id": 34,
                                "modifierName": {
                                    "id": 31,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1293,
                                    "src": "1126:6:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1126:20:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 25,
                                    "mutability": "mutable",
                                    "name": "name",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "1056:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 24,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1056:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 27,
                                    "mutability": "mutable",
                                    "name": "symbol",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "1076:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 26,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1076:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 29,
                                    "mutability": "mutable",
                                    "name": "baseTokenURI",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 41,
                                    "src": "1098:26:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 28,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1098:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1055:70:0"
                        },
                        "returnParameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1147:0:0"
                        },
                        "scope": 265,
                        "src": "1044:148:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 72,
                            "nodeType": "Block",
                            "src": "1267:274:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 50,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 48,
                                            "name": "tokenId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 43,
                                            "src": "1281:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "hexValue": "31313131",
                                            "id": 49,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1291:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1111_by_1",
                                                "typeString": "int_const 1111"
                                            },
                                            "value": "1111"
                                        },
                                        "src": "1281:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "condition": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 56,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 54,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "1352:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                                "hexValue": "32323232",
                                                "id": 55,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1362:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2222_by_1",
                                                    "typeString": "int_const 2222"
                                                },
                                                "value": "2222"
                                            },
                                            "src": "1352:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "falseBody": {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 60,
                                                    "name": "tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 43,
                                                    "src": "1423:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "33333333",
                                                    "id": 61,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1433:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_3333_by_1",
                                                        "typeString": "int_const 3333"
                                                    },
                                                    "value": "3333"
                                                },
                                                "src": "1423:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 68,
                                                "nodeType": "Block",
                                                "src": "1490:45:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "hexValue": "3830303030303030",
                                                            "id": 66,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1511:13:0",
                                                            "subdenomination": "gwei",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_80000000000000000_by_1",
                                                                "typeString": "int_const 80000000000000000"
                                                            },
                                                            "value": "80000000"
                                                        },
                                                        "functionReturnParameters": 47,
                                                        "id": 67,
                                                        "nodeType": "Return",
                                                        "src": "1504:20:0"
                                                    }
                                                ]
                                            },
                                            "id": 69,
                                            "nodeType": "IfStatement",
                                            "src": "1419:116:0",
                                            "trueBody": {
                                                "id": 65,
                                                "nodeType": "Block",
                                                "src": "1439:45:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "hexValue": "3630303030303030",
                                                            "id": 63,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1460:13:0",
                                                            "subdenomination": "gwei",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_60000000000000000_by_1",
                                                                "typeString": "int_const 60000000000000000"
                                                            },
                                                            "value": "60000000"
                                                        },
                                                        "functionReturnParameters": 47,
                                                        "id": 64,
                                                        "nodeType": "Return",
                                                        "src": "1453:20:0"
                                                    }
                                                ]
                                            }
                                        },
                                        "id": 70,
                                        "nodeType": "IfStatement",
                                        "src": "1348:187:0",
                                        "trueBody": {
                                            "id": 59,
                                            "nodeType": "Block",
                                            "src": "1368:45:0",
                                            "statements": [
                                                {
                                                    "expression": {
                                                        "hexValue": "3430303030303030",
                                                        "id": 57,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1389:13:0",
                                                        "subdenomination": "gwei",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_40000000000000000_by_1",
                                                            "typeString": "int_const 40000000000000000"
                                                        },
                                                        "value": "40000000"
                                                    },
                                                    "functionReturnParameters": 47,
                                                    "id": 58,
                                                    "nodeType": "Return",
                                                    "src": "1382:20:0"
                                                }
                                            ]
                                        }
                                    },
                                    "id": 71,
                                    "nodeType": "IfStatement",
                                    "src": "1277:258:0",
                                    "trueBody": {
                                        "id": 53,
                                        "nodeType": "Block",
                                        "src": "1297:45:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "3230303030303030",
                                                    "id": 51,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1318:13:0",
                                                    "subdenomination": "gwei",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_20000000000000000_by_1",
                                                        "typeString": "int_const 20000000000000000"
                                                    },
                                                    "value": "20000000"
                                                },
                                                "functionReturnParameters": 47,
                                                "id": 52,
                                                "nodeType": "Return",
                                                "src": "1311:20:0"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "functionSelector": "559e775b",
                        "id": 73,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getMintPrice",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 44,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73,
                                    "src": "1220:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1220:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1219:17:0"
                        },
                        "returnParameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73,
                                    "src": "1258:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1258:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1257:9:0"
                        },
                        "scope": 265,
                        "src": "1198:343:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 110,
                            "nodeType": "Block",
                            "src": "1591:242:0",
                            "statements": [
                                {
                                    "assignments": [
                                        77
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 77,
                                            "mutability": "mutable",
                                            "name": "tokenId",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 110,
                                            "src": "1601:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 76,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1601:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 80,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 78,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1516,
                                            "src": "1619:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 79,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1619:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1601:31:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 82,
                                                    "name": "tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 77,
                                                    "src": "1650:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "id": 83,
                                                    "name": "TOKEN_LIMIT",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 22,
                                                    "src": "1661:11:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                    }
                                                },
                                                "src": "1650:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c696d6974",
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1674:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_d7a11eed4ddf5139d7c32a6eccd8bdf533799ac46949a7e57ded8a961e37a68f",
                                                    "typeString": "literal_string \"Limit\""
                                                },
                                                "value": "Limit"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_d7a11eed4ddf5139d7c32a6eccd8bdf533799ac46949a7e57ded8a961e37a68f",
                                                    "typeString": "literal_string \"Limit\""
                                                }
                                            ],
                                            "id": 81,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1642:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1642:40:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1642:40:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 92,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 88,
                                                "name": "_msgSender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2169,
                                                "src": "1696:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                    "typeString": "function () view returns (address)"
                                                }
                                            },
                                            "id": 89,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1696:12:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 90,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 298,
                                                "src": "1712:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                    "typeString": "function () view returns (address)"
                                                }
                                            },
                                            "id": 91,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1712:7:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1696:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 103,
                                    "nodeType": "IfStatement",
                                    "src": "1692:97:0",
                                    "trueBody": {
                                        "id": 102,
                                        "nodeType": "Block",
                                        "src": "1721:68:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 99,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "id": 94,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967281,
                                                                    "src": "1743:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 95,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "value",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1743:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">=",
                                                            "rightExpression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 97,
                                                                        "name": "tokenId",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 77,
                                                                        "src": "1769:7:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "id": 96,
                                                                    "name": "getMintPrice",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 73,
                                                                    "src": "1756:12:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                                                        "typeString": "function (uint256) pure returns (uint256)"
                                                                    }
                                                                },
                                                                "id": 98,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1756:21:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "1743:34:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        ],
                                                        "id": 93,
                                                        "name": "require",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [
                                                            4294967278,
                                                            4294967278
                                                        ],
                                                        "referencedDeclaration": 4294967278,
                                                        "src": "1735:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                            "typeString": "function (bool) pure"
                                                        }
                                                    },
                                                    "id": 100,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1735:43:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 101,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1735:43:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 105,
                                                    "name": "_msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2169,
                                                    "src": "1804:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 106,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1804:12:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 107,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77,
                                                "src": "1818:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 104,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1043,
                                            "src": "1798:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 108,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1798:28:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 109,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1798:28:0"
                                }
                            ]
                        },
                        "functionSelector": "2004ffd9",
                        "id": 111,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintToken",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 74,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1565:2:0"
                        },
                        "returnParameters": {
                            "id": 75,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1591:0:0"
                        },
                        "scope": 265,
                        "src": "1547:286:0",
                        "stateMutability": "payable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            679
                        ],
                        "body": {
                            "id": 119,
                            "nodeType": "Block",
                            "src": "1914:37:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 117,
                                        "name": "_baseTokenURI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16,
                                        "src": "1931:13:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 116,
                                    "id": 118,
                                    "nodeType": "Return",
                                    "src": "1924:20:0"
                                }
                            ]
                        },
                        "id": 120,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_baseURI",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 113,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1881:8:0"
                        },
                        "parameters": {
                            "id": 112,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1856:2:0"
                        },
                        "returnParameters": {
                            "id": 116,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 115,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 120,
                                    "src": "1899:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 114,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1899:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1898:15:0"
                        },
                        "scope": 265,
                        "src": "1839:112:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            670
                        ],
                        "body": {
                            "id": 140,
                            "nodeType": "Block",
                            "src": "2045:82:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 134,
                                                                "name": "tokenId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 122,
                                                                "src": "2101:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 132,
                                                                "name": "super",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967271,
                                                                "src": "2086:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_super$_Galaget_$265_$",
                                                                    "typeString": "type(contract super Galaget)"
                                                                }
                                                            },
                                                            "id": 133,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "tokenURI",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 670,
                                                            "src": "2086:14:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                "typeString": "function (uint256) view returns (string memory)"
                                                            }
                                                        },
                                                        "id": 135,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2086:23:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "2e6a736f6e",
                                                        "id": 136,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2111:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                                            "typeString": "literal_string \".json\""
                                                        },
                                                        "value": ".json"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                                            "typeString": "literal_string \".json\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 130,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "2069:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 131,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2069:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 137,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2069:50:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 129,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2062:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                                "typeString": "type(string storage pointer)"
                                            },
                                            "typeName": {
                                                "id": 128,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2062:6:0",
                                                "typeDescriptions": {}
                                            }
                                        },
                                        "id": 138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2062:58:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "functionReturnParameters": 127,
                                    "id": 139,
                                    "nodeType": "Return",
                                    "src": "2055:65:0"
                                }
                            ]
                        },
                        "functionSelector": "c87b56dd",
                        "id": 141,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "tokenURI",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 124,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2012:8:0"
                        },
                        "parameters": {
                            "id": 123,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 122,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 141,
                                    "src": "1975:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 121,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1975:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1974:17:0"
                        },
                        "returnParameters": {
                            "id": 127,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 126,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 141,
                                    "src": "2030:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 125,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2030:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2029:15:0"
                        },
                        "scope": 265,
                        "src": "1957:170:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 150,
                            "nodeType": "Block",
                            "src": "2373:25:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 147,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 445,
                                            "src": "2383:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 148,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2383:8:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 149,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2383:8:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 142,
                            "nodeType": "StructuredDocumentation",
                            "src": "2133:193:0",
                            "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                        },
                        "functionSelector": "8456cb59",
                        "id": 151,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 145,
                                "modifierName": {
                                    "id": 144,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 312,
                                    "src": "2363:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2363:9:0"
                            }
                        ],
                        "name": "pause",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 143,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2345:2:0"
                        },
                        "returnParameters": {
                            "id": 146,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2373:0:0"
                        },
                        "scope": 265,
                        "src": "2331:67:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 160,
                            "nodeType": "Block",
                            "src": "2650:27:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 157,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 461,
                                            "src": "2660:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2660:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 159,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2660:10:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 152,
                            "nodeType": "StructuredDocumentation",
                            "src": "2404:197:0",
                            "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                        },
                        "functionSelector": "3f4ba83a",
                        "id": 161,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 155,
                                "modifierName": {
                                    "id": 154,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 312,
                                    "src": "2640:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2640:9:0"
                            }
                        ],
                        "name": "unpause",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 153,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2622:2:0"
                        },
                        "returnParameters": {
                            "id": 156,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2650:0:0"
                        },
                        "scope": 265,
                        "src": "2606:71:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1603,
                            1801
                        ],
                        "body": {
                            "id": 181,
                            "nodeType": "Block",
                            "src": "2846:62:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 176,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 163,
                                                "src": "2883:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 177,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 165,
                                                "src": "2889:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 178,
                                                "name": "tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 167,
                                                "src": "2893:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 173,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "2856:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_Galaget_$265_$",
                                                    "typeString": "type(contract super Galaget)"
                                                }
                                            },
                                            "id": 175,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_beforeTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1801,
                                            "src": "2856:26:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 179,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2856:45:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 180,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2856:45:0"
                                }
                            ]
                        },
                        "id": 182,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_beforeTokenTransfer",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 171,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 169,
                                    "name": "ERC721Enumerable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1765,
                                    "src": "2812:16:0"
                                },
                                {
                                    "id": 170,
                                    "name": "ERC721Pausable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1802,
                                    "src": "2830:14:0"
                                }
                            ],
                            "src": "2803:42:0"
                        },
                        "parameters": {
                            "id": 168,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 163,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "2722:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 162,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2722:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 165,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "2744:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 164,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2744:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 167,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 182,
                                    "src": "2764:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 166,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2764:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2712:73:0"
                        },
                        "returnParameters": {
                            "id": 172,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2846:0:0"
                        },
                        "scope": 265,
                        "src": "2683:225:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 209,
                            "nodeType": "Block",
                            "src": "2978:113:0",
                            "statements": [
                                {
                                    "assignments": [
                                        190,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 190,
                                            "mutability": "mutable",
                                            "name": "sent",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 209,
                                            "src": "2989:9:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 189,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2989:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null
                                    ],
                                    "id": 204,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 202,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3058:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                        "typeString": "literal_string \"\""
                                                    }
                                                ],
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 193,
                                                            "name": "recipient",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 184,
                                                            "src": "3011:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 192,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3003:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_payable_$",
                                                            "typeString": "type(address payable)"
                                                        },
                                                        "typeName": {
                                                            "id": 191,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3003:8:0",
                                                            "stateMutability": "payable",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 194,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3003:18:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "id": 195,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "call",
                                                "nodeType": "MemberAccess",
                                                "src": "3003:23:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                }
                                            },
                                            "id": 201,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                                "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                                {
                                                    "expression": {
                                                        "arguments": [
                                                            {
                                                                "id": 198,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "3043:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Galaget_$265",
                                                                    "typeString": "contract Galaget"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Galaget_$265",
                                                                    "typeString": "contract Galaget"
                                                                }
                                                            ],
                                                            "id": 197,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3035:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 196,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3035:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 199,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3035:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "id": 200,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balance",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3035:21:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "src": "3003:54:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3003:58:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2988:73:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 206,
                                                "name": "sent",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 190,
                                                "src": "3079:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 205,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3071:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 207,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3071:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 208,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3071:13:0"
                                }
                            ]
                        },
                        "functionSelector": "51cff8d9",
                        "id": 210,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 187,
                                "modifierName": {
                                    "id": 186,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 312,
                                    "src": "2968:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2968:9:0"
                            }
                        ],
                        "name": "withdraw",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 185,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 184,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 210,
                                    "src": "2932:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 183,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2932:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2931:19:0"
                        },
                        "returnParameters": {
                            "id": 188,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2978:0:0"
                        },
                        "scope": 265,
                        "src": "2914:177:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 231,
                            "nodeType": "Block",
                            "src": "3212:61:0",
                            "statements": [
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 221,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 298,
                                                    "src": "3230:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 222,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3230:7:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 228,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "components": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 225,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 223,
                                                                "name": "_salePrice",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 214,
                                                                "src": "3240:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "*",
                                                            "rightExpression": {
                                                                "hexValue": "343030",
                                                                "id": 224,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "3253:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_400_by_1",
                                                                    "typeString": "int_const 400"
                                                                },
                                                                "value": "400"
                                                            },
                                                            "src": "3240:16:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "id": 226,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "3239:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                    "hexValue": "3130303030",
                                                    "id": 227,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3260:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                        "typeString": "int_const 10000"
                                                    },
                                                    "value": "10000"
                                                },
                                                "src": "3239:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 229,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3229:37:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                            "typeString": "tuple(address,uint256)"
                                        }
                                    },
                                    "functionReturnParameters": 220,
                                    "id": 230,
                                    "nodeType": "Return",
                                    "src": "3222:44:0"
                                }
                            ]
                        },
                        "functionSelector": "2a55205a",
                        "id": 232,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "royaltyInfo",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 215,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 212,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 232,
                                    "src": "3118:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 211,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3118:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 214,
                                    "mutability": "mutable",
                                    "name": "_salePrice",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 232,
                                    "src": "3128:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 213,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3128:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3117:30:0"
                        },
                        "returnParameters": {
                            "id": 220,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 217,
                                    "mutability": "mutable",
                                    "name": "receiver",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 232,
                                    "src": "3171:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 216,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3171:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 219,
                                    "mutability": "mutable",
                                    "name": "royaltyAmount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 232,
                                    "src": "3189:21:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 218,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3189:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3170:41:0"
                        },
                        "scope": 265,
                        "src": "3097:176:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "baseFunctions": [
                            556,
                            1477
                        ],
                        "body": {
                            "id": 255,
                            "nodeType": "Block",
                            "src": "3457:147:0",
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        },
                                        "id": 245,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 243,
                                            "name": "interfaceId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 235,
                                            "src": "3471:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "id": 244,
                                            "name": "_INTERFACE_ID_ERC2981",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 19,
                                            "src": "3486:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                            }
                                        },
                                        "src": "3471:36:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 249,
                                    "nodeType": "IfStatement",
                                    "src": "3467:78:0",
                                    "trueBody": {
                                        "id": 248,
                                        "nodeType": "Block",
                                        "src": "3509:36:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "hexValue": "74727565",
                                                    "id": 246,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3530:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "functionReturnParameters": 242,
                                                "id": 247,
                                                "nodeType": "Return",
                                                "src": "3523:11:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 252,
                                                "name": "interfaceId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 235,
                                                "src": "3585:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                }
                                            ],
                                            "expression": {
                                                "id": 250,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "3561:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_Galaget_$265_$",
                                                    "typeString": "type(contract super Galaget)"
                                                }
                                            },
                                            "id": 251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "supportsInterface",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1477,
                                            "src": "3561:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                "typeString": "function (bytes4) view returns (bool)"
                                            }
                                        },
                                        "id": 253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3561:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 242,
                                    "id": 254,
                                    "nodeType": "Return",
                                    "src": "3554:43:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 233,
                            "nodeType": "StructuredDocumentation",
                            "src": "3279:56:0",
                            "text": " @dev See {IERC165-supportsInterface}."
                        },
                        "functionSelector": "01ffc9a7",
                        "id": 256,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "supportsInterface",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 239,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 237,
                                    "name": "ERC721",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1293,
                                    "src": "3416:6:0"
                                },
                                {
                                    "id": 238,
                                    "name": "ERC721Enumerable",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1765,
                                    "src": "3424:16:0"
                                }
                            ],
                            "src": "3407:34:0"
                        },
                        "parameters": {
                            "id": 236,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 235,
                                    "mutability": "mutable",
                                    "name": "interfaceId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 256,
                                    "src": "3367:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    },
                                    "typeName": {
                                        "id": 234,
                                        "name": "bytes4",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3367:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3366:20:0"
                        },
                        "returnParameters": {
                            "id": 242,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 241,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 256,
                                    "src": "3451:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 240,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3451:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3450:6:0"
                        },
                        "scope": 265,
                        "src": "3340:264:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 263,
                            "nodeType": "Block",
                            "src": "3692:76:0",
                            "statements": [
                                {
                                    "expression": {
                                        "hexValue": "68747470733a2f2f67616c616765742e636f6d2f67616c616765742d636f6e74726163742d6d657461646174612e6a736f6e",
                                        "id": 261,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3709:52:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_353f33fc00c2db6a46658e460778113ba79c2580b3237e8cbad9aa657719f761",
                                            "typeString": "literal_string \"https://galaget.com/galaget-contract-metadata.json\""
                                        },
                                        "value": "https://galaget.com/galaget-contract-metadata.json"
                                    },
                                    "functionReturnParameters": 260,
                                    "id": 262,
                                    "nodeType": "Return",
                                    "src": "3702:59:0"
                                }
                            ]
                        },
                        "functionSelector": "e8a3d485",
                        "id": 264,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "contractURI",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 257,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3651:2:0"
                        },
                        "returnParameters": {
                            "id": 260,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 259,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 264,
                                    "src": "3677:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 258,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3677:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3676:15:0"
                        },
                        "scope": 265,
                        "src": "3631:137:0",
                        "stateMutability": "pure",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 266,
                "src": "676:3094:0"
            }
        ],
        "src": "32:3739:0"
    },
    "functionHashes": {
        "TOKEN_LIMIT()": "031bd4c4",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "contractURI()": "e8a3d485",
        "getApproved(uint256)": "081812fc",
        "getMintPrice(uint256)": "559e775b",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintToken()": "2004ffd9",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "renounceOwnership()": "715018a6",
        "royaltyInfo(uint256,uint256)": "2a55205a",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "tokenURI(uint256)": "c87b56dd",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a",
        "withdraw(address)": "51cff8d9"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1749200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "TOKEN_LIMIT()": "309",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "1355",
            "contractURI()": "infinite",
            "getApproved(uint256)": "2201",
            "getMintPrice(uint256)": "451",
            "isApprovedForAll(address,address)": "infinite",
            "mintToken()": "infinite",
            "name()": "infinite",
            "owner()": "1192",
            "ownerOf(uint256)": "1367",
            "pause()": "infinite",
            "paused()": "1108",
            "renounceOwnership()": "23604",
            "royaltyInfo(uint256,uint256)": "1475",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "23416",
            "supportsInterface(bytes4)": "infinite",
            "symbol()": "infinite",
            "tokenByIndex(uint256)": "2937",
            "tokenOfOwnerByIndex(address,uint256)": "2441",
            "tokenURI(uint256)": "infinite",
            "totalSupply()": "1118",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "23842",
            "unpause()": "infinite",
            "withdraw(address)": "infinite"
        },
        "internal": {
            "_baseURI()": "infinite",
            "_beforeTokenTransfer(address,address,uint256)": "infinite"
        }
    }
}